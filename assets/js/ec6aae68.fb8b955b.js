"use strict";(self.webpackChunksymbiosis_techmmunity_com=self.webpackChunksymbiosis_techmmunity_com||[]).push([[223],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=l(n),u=o,h=c["".concat(p,".").concat(u)]||c[u]||d[u]||i;return n?a.createElement(h,r(r({ref:t},m),{},{components:n})):a.createElement(h,r({ref:t},m))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var l=2;l<i;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5293:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return m},default:function(){return c}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],s={sidebar_position:7},p="Find Operators",l={unversionedId:"overview/find-operators",id:"overview/find-operators",isDocsHomePage:!1,title:"Find Operators",description:"Find operators are used standardize how complex queries are made, so developers only have to learn how to do an specific thing one time.",source:"@site/docs/overview/find-operators.md",sourceDirName:"overview",slug:"/overview/find-operators",permalink:"/docs/overview/find-operators",editUrl:"https://github.com/techmmunity/symbiosis.techmmunity.com/edit/master/docs/overview/find-operators.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Repositories",permalink:"/docs/overview/repositories"},next:{title:"Save Operators",permalink:"/docs/overview/save-operators"}},m=[{value:"Between",id:"between",children:[],level:2},{value:"EndsWith",id:"endswith",children:[],level:2},{value:"Exist",id:"exist",children:[],level:2},{value:"In",id:"in",children:[],level:2},{value:"Includes",id:"includes",children:[],level:2},{value:"IsNull",id:"isnull",children:[],level:2},{value:"LessThan",id:"lessthan",children:[],level:2},{value:"LessThanOrEqual",id:"lessthanorequal",children:[],level:2},{value:"Like",id:"like",children:[],level:2},{value:"MoreThan",id:"morethan",children:[],level:2},{value:"MoreThanOrEqual",id:"morethanorequal",children:[],level:2},{value:"Not",id:"not",children:[],level:2},{value:"StartsWith",id:"startswith",children:[],level:2}],d={toc:m};function c(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"find-operators"},"Find Operators"),(0,i.kt)("p",null,"Find operators are used standardize how complex queries are made, so developers only have to learn how to do an specific thing one time."),(0,i.kt)("p",null,"The support of it's operators depends ",(0,i.kt)("strong",{parentName:"p"},"of the plugins"),", so you ",(0,i.kt)("strong",{parentName:"p"},"must")," see their docs to confirm ",(0,i.kt)("strong",{parentName:"p"},"if")," you can use this operators, and ",(0,i.kt)("strong",{parentName:"p"},"how exactly")," they work. Some of then will only accept certain types of values, ou values that are referring to something specific, like indexes in an array."),(0,i.kt)("h2",{id:"between"},"Between"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Between")," operator is used to find things between two values, it can includes dates, numbers and even strings, depending on the plugin and the database."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Depending on the plugin, this operator accepts ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," (ISO dates), ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Date"),"."),(0,i.kt)("p",{parentName:"div"},"By default, we recommend to the plugin creators to accept at least ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," as parameter."))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Between } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst products = await exampleRepository.find({\n  price: Between(1, 25),\n});\n\n// products = [{ id: 1, price: 2 }, { id: 2, price: 20 }]\n')),(0,i.kt)("h2",{id:"endswith"},"EndsWith"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"EndsWith")," operator is used to find columns where the value ends with a specific string."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { EndsWith } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  fullName: EndsWith("Wayne"),\n});\n\n// people = ["Bruce Wayne", "Martha Wayne", "Thomas Wayne"]\n')),(0,i.kt)("h2",{id:"exist"},"Exist"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Exist")," operator is used to find entities where some field ",(0,i.kt)("strong",{parentName:"p"},"exist"),", regardless it's value."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In most cases, this operator will be used by NoSQL databases"))),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Some databases don't accept this kind of query, so check it at the plugin documentation."))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Exist } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst tasks = exampleRepository.find({\n  deletedAt: Exist(),\n});\n\n// tasks = [{ name: "Foo", deletedAt: "01/01/2020" }, { name: "Bar", deletedAt: true }]\n')),(0,i.kt)("h2",{id:"in"},"In"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"In")," operator allow you to query multiple values to the same column."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Some plugins ",(0,i.kt)("em",{parentName:"p"},"may")," accept a combination of this decorator with other decorators, like this: ",(0,i.kt)("inlineCode",{parentName:"p"},'In([Not("foo"), Like("bar")])'),"."),(0,i.kt)("p",{parentName:"div"},"Please check it at the plugin documentation."))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { In } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  age: In([18, 21, 48]),\n});\n\n// people = [{ name: "Marcus", age: 48 }]\n')),(0,i.kt)("h2",{id:"includes"},"Includes"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Includes")," operator allow you to query values inside a list."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Includes } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst staff = await exampleRepository.find({\n  roles: Includes(["admin", "mod"]),\n});\n\n// staff = [{ name: "Marcus", roles: ["default", "admin"] }]\n')),(0,i.kt)("h2",{id:"isnull"},"IsNull"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IsNull")," operator is used to find columns that have a ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," value."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { IsNull } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst tasks = await exampleRepository.find({\n  deletedAt: IsNull(),\n});\n\n// tasks = [{ name: "Foo", deletedAt: null }, { name: "Bar", deletedAt: null }]\n')),(0,i.kt)("h2",{id:"lessthan"},"LessThan"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"LessThan")," operator is used to find columns that have a value less than a specific value."),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This operator ",(0,i.kt)("strong",{parentName:"p"},"can't")," be combined with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Not")," operator. Use the ",(0,i.kt)("a",{parentName:"p",href:"#morethanorequal"},(0,i.kt)("inlineCode",{parentName:"a"},"MoreThanOrEqual"))," operator instead."))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { LessThan } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  age: LessThan(35),\n});\n\n// people = [{ name: "Marcus", age: 20 }]\n')),(0,i.kt)("h2",{id:"lessthanorequal"},"LessThanOrEqual"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"LessThanOrEqual")," operator is used to find columns that have a value less than or equal to a specific value."),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This operator ",(0,i.kt)("strong",{parentName:"p"},"can't")," be combined with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Not")," operator. Use the ",(0,i.kt)("a",{parentName:"p",href:"#morethan"},(0,i.kt)("inlineCode",{parentName:"a"},"MoreThan"))," operator instead."))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { LessThanOrEqual } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  age: LessThanOrEqual(35),\n});\n\n// people = [{ name: "Marcus", age: 35 }]\n')),(0,i.kt)("h2",{id:"like"},"Like"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Like")," operator is used to find columns where the value includes a specific string."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The value is ",(0,i.kt)("strong",{parentName:"p"},"case sensitive"),"!"))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Like } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  fullName: Like("John"),\n});\n\n// people = [{ fullName: "Paul John Marcus" }, { fullName: "John Hancock" }]\n')),(0,i.kt)("h2",{id:"morethan"},"MoreThan"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MoreThan")," operator is used to find columns that have a value more than a specific value."),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This operator ",(0,i.kt)("strong",{parentName:"p"},"can't")," be combined with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Not")," operator. Use the ",(0,i.kt)("a",{parentName:"p",href:"#lessthanorequal"},(0,i.kt)("inlineCode",{parentName:"a"},"LessThanOrEqual"))," operator instead."))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { MoreThan } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  age: MoreThan(35),\n});\n\n// people = [{ name: "Marcus", age: 40 }]\n')),(0,i.kt)("h2",{id:"morethanorequal"},"MoreThanOrEqual"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MoreThanOrEqual")," operator is used to find columns that have a value more than or equal to a specific value."),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This operator ",(0,i.kt)("strong",{parentName:"p"},"can't")," be combined with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Not")," operator. Use the ",(0,i.kt)("a",{parentName:"p",href:"#lessthan"},(0,i.kt)("inlineCode",{parentName:"a"},"LessThan"))," operator instead."))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { MoreThanOrEqual } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  age: MoreThanOrEqual(35),\n});\n\n// people = [{ name: "Marcus", age: 35 }]\n')),(0,i.kt)("h2",{id:"not"},"Not"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Not")," is the most versatile of the operators. It's used to negate values, and can be combined with almost all of the operators."),(0,i.kt)("p",null,"Example with simple value:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Not } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  age: Not(35),\n});\n\n// people = [{ name: "Marcus", age: 40 }, { name: "Kate", age: 26 }]\n')),(0,i.kt)("p",null,"Example combine with other operator:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Not, In } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\nconst people = await exampleRepository.find({\n  age: Not(In([35, 48, 52])),\n});\n\n// people = [{ name: "Marcus", age: 40 }, { name: "Kate", age: 26 }]\n')),(0,i.kt)("h2",{id:"startswith"},"StartsWith"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"StartsWith")," operator is used to find columns where the value starts with a specific string."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { StartsWith } from "@techmmunity/symbiosis";\n\nimport { exampleRepository } from "./example.repository";\n\n// ...\n\nconst people = await exampleRepository.find({\n  fullName: StartsWith("Bruce"),\n});\n\n// people = ["Bruce Banner", "Bruce Wayne"]\n\n// ...\n')))}c.isMDXComponent=!0}}]);