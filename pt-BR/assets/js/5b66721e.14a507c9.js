"use strict";(self.webpackChunksymbiosis_techmmunity_com=self.webpackChunksymbiosis_techmmunity_com||[]).push([[53],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return y}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),y=i,d=c["".concat(p,".").concat(y)]||c[y]||m[y]||o;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},43:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return s},default:function(){return c}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:11},p="Types",u={unversionedId:"overview/types",id:"overview/types",isDocsHomePage:!1,title:"Types",description:"Symb exports some types to help you to type your application without have to worry so much.",source:"@site/docs/overview/types.md",sourceDirName:"overview",slug:"/overview/types",permalink:"/pt-BR/docs/overview/types",editUrl:"https://github.com/techmmunity/symbiosis.techmmunity.com/edit/master/docs/overview/types.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"CLI",permalink:"/pt-BR/docs/overview/cli"},next:{title:"Limitations And Warnings",permalink:"/pt-BR/docs/overview/limitations"}},s=[{value:"<code>EntityType</code>",id:"entitytype",children:[{value:"Omitted Fields",id:"omitted-fields",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],level:2}],m={toc:s};function c(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"types"},"Types"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Symb")," exports some types to help you to type your application without have to worry so much."),(0,o.kt)("h2",{id:"entitytype"},(0,o.kt)("inlineCode",{parentName:"h2"},"EntityType")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"EntityType")," is a type to help you to type your entity. It automatically omits some fields, and allow you to omit more fields if necessary."),(0,o.kt)("h3",{id:"omitted-fields"},"Omitted Fields"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runAfterDelete")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runAfterFind")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runAfterInsert")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runAfterUpdate")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runAfterUpsert")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runBeforeDelete")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runBeforeFind")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runBeforeInsert")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runBeforeUpdate")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"runBeforeUpsert"))),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Entity, PrimaryGeneratedColumn, createdAtHash, EntityType } from "@techmmunity/symbiosis";\n\n@Entity()\nclass ExampleEntity {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @Column()\n  createdAtHash: string;\n}\n\nexport ExampleType = EntityType<ExampleEntity, "createdAtHash">;\n')))}c.isMDXComponent=!0}}]);